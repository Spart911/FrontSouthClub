import React, { useState } from 'react';
import styled from 'styled-components';

const SectionWrapper = styled.section`
  padding: 40px 20px;
  background: #ffffff;
`;

const Title = styled.h2`
  font-size: 5rem;
  font-family: 'HeatherGreen', 'Helvetica', sans-serif;
  font-weight: 900;
  text-align: center;
  margin-bottom: 32px;
  color: rgb(0, 0, 0);
`;

const Container = styled.div`
  width: 43%;
  max-width: 1000px;
  margin: 0 auto;
  position: relative;
  @media (max-width: 769px) {
    width: 80%;
  }
`;

const AccordionContainer = styled.div`
  overflow: hidden;
`;

const AccordionItem = styled.div<{ $isOpen: boolean }>`
  border-bottom: 1px solid #e0e0e0;
  
  &:last-child {
    border-bottom: none;
  }
`;

const AccordionHeader = styled.button<{ $isOpen: boolean }>`
  width: 100%;
  padding: 20px;
  background:  #ffffff;
  border: none;
  outline: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: space-between;
  transition: all 0.3s ease;
  font-family: 'HeatherGreen', 'Helvetica', sans-serif;
  font-size: 2rem;
  font-weight: ${props => props.$isOpen ? '900' : '700'};
  color: #000;
  
  &:focus {
    outline: none;
    border: none;
    box-shadow: none;
  }
  
  &:active {
    outline: none;
    border: none;
    box-shadow: none;
  }
  
  @media (max-width: 768px) {
    padding: 15px;
    font-size: 1.8rem;
  }
`;

const AccordionTitle = styled.span`
  text-align: left;
  font-size: 2.8rem;
`;

const AccordionIcon = styled.span<{ $isOpen: boolean }>`
  font-size: 2rem;
  font-weight: 400;
  font-family: Arial, sans-serif;
  color: #000;
  transition: all 0.3s ease;
  transform: ${props => props.$isOpen ? 'rotate(45deg)' : 'rotate(0deg)'};
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  line-height: 1;
  text-align: center;
  
  ${AccordionHeader}:hover & {
    background: #f0f0f0;
  }
  
  @media (max-width: 768px) {
    font-size: 2rem;
    width: 45px;
    height: 45px;
  }
`;

const AccordionContent = styled.div<{ $isOpen: boolean }>`
  max-height: ${props => props.$isOpen ? '1500px' : '0'};
  overflow: hidden;
  transition: max-height 0.3s ease;
  background: #ffffff;
`;

const AccordionText = styled.div`
  padding: 20px;
  font-family: 'Helvetica', sans-serif;
  font-size: 1.6rem;
  line-height: 1.6;
  color: #333;
  
  @media (max-width: 768px) {
    padding: 15px;
    font-size: 1.4rem;
  }
`;

interface AccordionData {
  id: string;
  title: string;
  content: string;
}

const accordionData: AccordionData[] = [
  {
    id: 'contacts',
    title: '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
    content: `üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (903) 404-43-01
üìß Email: southclub@mail.ru
üìç –ê–¥—Ä–µ—Å: –†–æ—Å—Å–∏—è, –æ–±–ª. –†–æ—Å—Ç–æ–≤—Å–∫–∞—è, –≥. –†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É
üïí –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: –ü–Ω-–ü—Ç 9:00-18:00

–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º. –ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã.`
  },
  {
    id: 'delivery',
    title: '–î–æ—Å—Ç–∞–≤–∫–∞',
    content: `üöö –°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏: –î–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –ø–æ—Å–ª–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: 299 ‚ÇΩ
üìç –î–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç–æ–ª—å–∫–æ –≤ –†–æ—Å—Ç–æ–≤–µ-–Ω–∞-–î–æ–Ω—É.

–î–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –∫—É—Ä—å–µ—Ä—Å–∫–æ–π —Å–ª—É–∂–±–æ–π –∏–ª–∏ –ø–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏. –¢–æ—á–Ω—ã–µ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –≤–∞—à–µ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞.`
  },
  {
    id: 'return',
    title: '–í–æ–∑–≤—Ä–∞—Ç',
    content: `üîÑ –í–æ–∑–≤—Ä–∞—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 14 –¥–Ω–µ–π
‚úÖ –í–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞ –Ω–∞–¥–ª–µ–∂–∞—â–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
‚ùå –í–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞ –Ω–µ–Ω–∞–¥–ª–µ–∂–∞—â–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
üìã –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã: —á–µ–∫, –ø–∞—Å–ø–æ—Ä—Ç

–£—Å–ª–æ–≤–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –†–§. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —É—Ç–æ—á–Ω—è–π—Ç–µ —É –Ω–∞—à–∏—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤.`
  }
//   ,
//   {
//     id: 'partnership',
//     title: '–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ',
//     content: `ü§ù –ú—ã –æ—Ç–∫—Ä—ã—Ç—ã –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É
// üíº –û–ø—Ç–æ–≤—ã–µ –ø–æ—Å—Ç–∞–≤–∫–∏
// üè™ –§—Ä–∞–Ω—à–∏–∑–∞
// üìà –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã

// –ï—Å–ª–∏ –≤—ã –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã –≤ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–µ, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π. –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤.`
//   }
];

export const InfoAccordion: React.FC = () => {
  const [openItems, setOpenItems] = useState<string[]>([]);
  const [isVisible, setIsVisible] = useState(true);

  const toggleItem = (itemId: string) => {
    setOpenItems(prev => 
      prev.includes(itemId) 
        ? prev.filter(id => id !== itemId)
        : [...prev, itemId]
    );
  };

  const closeBlock = () => {
    setIsVisible(false);
  };

  if (!isVisible) {
    return null;
  }

  return (
    <SectionWrapper>
      <Title>–ò–ù–§–û–†–ú–ê–¶–ò–Ø</Title>
      <Container>
        <AccordionContainer>
          {accordionData.map((item) => (
            <AccordionItem key={item.id} $isOpen={openItems.includes(item.id)}>
              <AccordionHeader 
                onClick={() => toggleItem(item.id)}
                $isOpen={openItems.includes(item.id)}
              >
                <AccordionTitle>{item.title}</AccordionTitle>
                <AccordionIcon $isOpen={openItems.includes(item.id)}>
                  {'+'}
                </AccordionIcon>
              </AccordionHeader>
              <AccordionContent $isOpen={openItems.includes(item.id)}>
                <AccordionText>
                  {item.content.split('\n').map((line, index) => (
                    <div key={index}>
                      {line}
                      {index < item.content.split('\n').length - 1 && <br />}
                    </div>
                  ))}
                </AccordionText>
              </AccordionContent>
            </AccordionItem>
          ))}
        </AccordionContainer>
      </Container>
    </SectionWrapper>
  );
};
